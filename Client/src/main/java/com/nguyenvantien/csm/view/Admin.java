package com.nguyenvantien.csm.view;

import com.nguyenvantien.csm.api.ItemApi;
import com.nguyenvantien.csm.api.RevenueApi;
import com.nguyenvantien.csm.api.UserApi;
import com.nguyenvantien.csm.model.ItemCategoryDto;
import com.nguyenvantien.csm.model.Revenue;
import com.nguyenvantien.csm.model.User;
import com.nguyenvantien.csm.model.UserDto;
import com.nguyenvantien.csm.utils.ItemsListUtils;
import com.nguyenvantien.csm.utils.StringUtils;
import com.nguyenvantien.csm.utils.UsersListUtils;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class Admin extends javax.swing.JFrame {

    private UserDto user;
    private JFrame addItem;
    private JFrame updateItem;
    private JFrame addUser;
    private JFrame updateUser;
    
    public Admin() {
        this.addItem = new AddItem(this);
        this.updateItem = new UpdateItem(this);
        this.addUser = new AddUser(this);
        this.updateUser = new UpdateUser(this);
        initComponents();
        setItemsTable("");
        setUserTable("");
        setRevenueTable("date", dateTb);
        setRevenueTable("month", monthTb);
        setRevenueTable("year", yearTb);
        
    }
    
    public Admin(UserDto user) {
        this.user = user;
        this.addItem = new AddItem(this);
        this.updateItem = new UpdateItem(this);
        this.addUser = new AddUser(this);
        this.updateUser = new UpdateUser(this);
        initComponents();
        this.setLocationRelativeTo(null);
        setItemsTable("");
        setUserTable("");
        setRevenueTable("date", dateTb);
        setRevenueTable("month", monthTb);
        setRevenueTable("year", yearTb);
    }
    
    public void setItemsTable(String name){
        List<ItemCategoryDto> lists = null;
        try {
            lists = ItemApi.getAllItemAndCategory(name);
        } catch (IOException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultTableModel defaultTableModel = (DefaultTableModel) itemTb.getModel();
        defaultTableModel.setNumRows(0);
        for (int i = 0; i < lists.size(); i++) {
            defaultTableModel.addRow(new Object[]{
                lists.get(i).getName(),
                StringUtils.formatMoney(lists.get(i).getPrice().toString()),
                lists.get(i).getUnit(),
                lists.get(i).getNameCategory()
            });
            ItemsListUtils.itemsList.put(lists.get(i).getName(), lists.get(i).getId());
        }
        ItemsListUtils.itemsList.entrySet().forEach(e->{
            System.out.println(e);
        });
    }
    
    public void setUserTable(String name){
        List<User> lists = null;
        try {
            lists = UserApi.getUsers(name);
        } catch (IOException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultTableModel defaultTableModel = (DefaultTableModel) usersTb.getModel();
        defaultTableModel.setNumRows(0);
        for (int i = 0; i < lists.size(); i++) {
            defaultTableModel.addRow(new Object[]{
                lists.get(i).getFullName(),
                lists.get(i).getUserName(),
                lists.get(i).getPassword(),
                lists.get(i).getPhoneNumber(),
                lists.get(i).getAddress(),
                lists.get(i).getRole()
            });
            UsersListUtils.usersList.put(lists.get(i).getUserName(), lists.get(i).getId());
        }
        UsersListUtils.usersList.entrySet().forEach(e->{
            System.out.println(e);
        });
    }
    
    public void setRevenueTable(String time, JTable table){
        List<Revenue> lists = null;
        try {
            lists = RevenueApi.getRevenues(time);
        } catch (IOException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
        defaultTableModel.setNumRows(0);
        for (int i = 0; i < lists.size(); i++) {
            defaultTableModel.addRow(new Object[]{
                StringUtils.formatMoney(lists.get(i).getTotal().toString()),
                lists.get(i).getTime(),
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        searchTf = new javax.swing.JTextField();
        searchBt = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemTb = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        showAddItemBt = new javax.swing.JButton();
        showUpdateItemBt = new javax.swing.JButton();
        deleteItemBt = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        searchUserTf = new javax.swing.JTextField();
        searchUserBt = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        usersTb = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        addUserBt = new javax.swing.JButton();
        updateUserBt = new javax.swing.JButton();
        deleteUserBt = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        monthp = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        dateTb = new javax.swing.JTable();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        monthTb = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        yearTb = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        logoutMn = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý cửa hàng");
        setBackground(new java.awt.Color(255, 102, 204));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jTabbedPane1.setBackground(new java.awt.Color(51, 51, 255));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.Y_AXIS));

        jPanel4.setBackground(new java.awt.Color(255, 204, 102));
        jPanel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 1, 10, 1));
        jPanel4.setMaximumSize(new java.awt.Dimension(32767, 500));
        jPanel4.setPreferredSize(new java.awt.Dimension(594, 60));
        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Tìm kiếm  ");
        jPanel4.add(jLabel1);
        jPanel4.add(searchTf);

        searchBt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchBt.setText("Tìm");
        searchBt.setMaximumSize(new java.awt.Dimension(63, 40));
        searchBt.setMinimumSize(new java.awt.Dimension(63, 40));
        searchBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtActionPerformed(evt);
            }
        });
        jPanel4.add(searchBt);

        jPanel1.add(jPanel4);

        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.LINE_AXIS));

        itemTb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên", "Giá", "Đơn vị", "Loại hàng"
            }
        ));
        itemTb.setMinimumSize(new java.awt.Dimension(125, 125));
        itemTb.setRowHeight(36);
        jScrollPane1.setViewportView(itemTb);

        jPanel5.add(jScrollPane1);

        jPanel1.add(jPanel5);

        jPanel6.setBackground(new java.awt.Color(255, 51, 51));
        jPanel6.setMaximumSize(new java.awt.Dimension(32767, 1000));
        jPanel6.setLayout(new java.awt.GridLayout(1, 3, 20, 0));

        showAddItemBt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        showAddItemBt.setText("THÊM");
        showAddItemBt.setMaximumSize(new java.awt.Dimension(71, 50));
        showAddItemBt.setMinimumSize(new java.awt.Dimension(71, 50));
        showAddItemBt.setPreferredSize(new java.awt.Dimension(71, 50));
        showAddItemBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAddItemBtActionPerformed(evt);
            }
        });
        jPanel6.add(showAddItemBt);

        showUpdateItemBt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        showUpdateItemBt.setText("SỬA");
        showUpdateItemBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showUpdateItemBtActionPerformed(evt);
            }
        });
        jPanel6.add(showUpdateItemBt);

        deleteItemBt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        deleteItemBt.setText("XÓA");
        deleteItemBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItemBtActionPerformed(evt);
            }
        });
        jPanel6.add(deleteItemBt);

        jPanel1.add(jPanel6);

        jTabbedPane1.addTab("Quản lý mặt hàng", jPanel1);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.Y_AXIS));

        jPanel7.setBackground(new java.awt.Color(255, 204, 102));
        jPanel7.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 1, 10, 1));
        jPanel7.setMaximumSize(new java.awt.Dimension(32767, 500));
        jPanel7.setPreferredSize(new java.awt.Dimension(594, 60));
        jPanel7.setLayout(new javax.swing.BoxLayout(jPanel7, javax.swing.BoxLayout.LINE_AXIS));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Tìm kiếm  ");
        jPanel7.add(jLabel2);
        jPanel7.add(searchUserTf);

        searchUserBt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchUserBt.setText("Tìm");
        searchUserBt.setMaximumSize(new java.awt.Dimension(63, 40));
        searchUserBt.setMinimumSize(new java.awt.Dimension(63, 40));
        searchUserBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchUserBtActionPerformed(evt);
            }
        });
        jPanel7.add(searchUserBt);

        jPanel2.add(jPanel7);

        jPanel8.setLayout(new javax.swing.BoxLayout(jPanel8, javax.swing.BoxLayout.LINE_AXIS));

        usersTb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên", "Tài khoản", "Mật khẩu", "Số điện thoại", "Địa chỉ", "Role"
            }
        ));
        usersTb.setMinimumSize(new java.awt.Dimension(125, 125));
        usersTb.setRowHeight(36);
        jScrollPane2.setViewportView(usersTb);

        jPanel8.add(jScrollPane2);

        jPanel2.add(jPanel8);

        jPanel9.setBackground(new java.awt.Color(255, 51, 51));
        jPanel9.setMaximumSize(new java.awt.Dimension(32767, 1000));
        jPanel9.setLayout(new java.awt.GridLayout(1, 3, 20, 0));

        addUserBt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addUserBt.setText("THÊM");
        addUserBt.setMaximumSize(new java.awt.Dimension(71, 50));
        addUserBt.setMinimumSize(new java.awt.Dimension(71, 50));
        addUserBt.setPreferredSize(new java.awt.Dimension(71, 50));
        addUserBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserBtActionPerformed(evt);
            }
        });
        jPanel9.add(addUserBt);

        updateUserBt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateUserBt.setText("SỬA");
        updateUserBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateUserBtActionPerformed(evt);
            }
        });
        jPanel9.add(updateUserBt);

        deleteUserBt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        deleteUserBt.setText("XÓA");
        deleteUserBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUserBtActionPerformed(evt);
            }
        });
        jPanel9.add(deleteUserBt);

        jPanel2.add(jPanel9);

        jTabbedPane1.addTab("Quản lý nhân viên", jPanel2);

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.LINE_AXIS));

        monthp.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jPanel10.setLayout(new javax.swing.BoxLayout(jPanel10, javax.swing.BoxLayout.LINE_AXIS));

        dateTb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Doanh thu", "Thời gian"
            }
        ));
        dateTb.setRowHeight(36);
        jScrollPane3.setViewportView(dateTb);

        jPanel10.add(jScrollPane3);

        monthp.addTab("Ngày", jPanel10);

        jPanel13.setLayout(new javax.swing.BoxLayout(jPanel13, javax.swing.BoxLayout.LINE_AXIS));

        monthTb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Doanh thu", "Tháng-Năm"
            }
        ));
        monthTb.setRowHeight(36);
        jScrollPane4.setViewportView(monthTb);

        jPanel13.add(jScrollPane4);

        monthp.addTab("Tháng", jPanel13);

        jPanel14.setLayout(new javax.swing.BoxLayout(jPanel14, javax.swing.BoxLayout.LINE_AXIS));

        yearTb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Doanh thu", "Thời gian"
            }
        ));
        yearTb.setRowHeight(36);
        jScrollPane5.setViewportView(yearTb);

        jPanel14.add(jScrollPane5);

        monthp.addTab("Năm", jPanel14);

        jPanel3.add(monthp);

        jTabbedPane1.addTab("Thống kê", jPanel3);

        getContentPane().add(jTabbedPane1);

        jMenu1.setText("File");

        logoutMn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        logoutMn.setText("Đăng xuất");
        logoutMn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutMnActionPerformed(evt);
            }
        });
        jMenu1.add(logoutMn);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void showAddItemBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAddItemBtActionPerformed
        // TODO add your handling code here:
        this.addItem.setVisible(true);
        this.setEnabled(false);
    }//GEN-LAST:event_showAddItemBtActionPerformed

    private void showUpdateItemBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showUpdateItemBtActionPerformed
        int row = itemTb.getSelectedRow();
        String name = itemTb.getValueAt(row, 0).toString();
        String price = String.valueOf(StringUtils.toValue(itemTb.getValueAt(row, 1).toString()));
        System.out.println(price);
        String unit = itemTb.getValueAt(row, 2).toString();
        String category = itemTb.getValueAt(row, 3).toString();
        new UpdateItem(this, name, price, unit, category).setVisible(true);
        this.setEnabled(false);
    }//GEN-LAST:event_showUpdateItemBtActionPerformed

    private void searchBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtActionPerformed
        String name = this.searchTf.getText();
        DefaultTableModel defaultTableModel = (DefaultTableModel) itemTb.getModel();
        defaultTableModel.getDataVector().removeAllElements();
        setItemsTable(name);
    }//GEN-LAST:event_searchBtActionPerformed

    private void deleteItemBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteItemBtActionPerformed
        int row = itemTb.getSelectedRow();
        boolean check = false;
        if(row > 0){
            Integer id = ItemsListUtils.getIds().get(itemTb.getValueAt(row, 0).toString());
            try {
                check = ItemApi.deleteItem(id);
                System.out.println(check);
            } catch (IOException ex) {
                Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        setItemsTable("");
    }//GEN-LAST:event_deleteItemBtActionPerformed

    private void searchUserBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchUserBtActionPerformed
        String name = searchUserTf.getText();
        setUserTable(name);
    }//GEN-LAST:event_searchUserBtActionPerformed

    private void addUserBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserBtActionPerformed
        this.addUser.setVisible(true);
        this.setEnabled(false);
    }//GEN-LAST:event_addUserBtActionPerformed

    private void updateUserBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateUserBtActionPerformed
        int row = usersTb.getSelectedRow();
        String name = usersTb.getValueAt(row, 0).toString();
        String userName = usersTb.getValueAt(row, 1).toString();
        String password = usersTb.getValueAt(row, 2).toString();
        String phoneNumber = usersTb.getValueAt(row, 3).toString();
        String address = usersTb.getValueAt(row, 4).toString();
        String role = usersTb.getValueAt(row, 5).toString();
        new UpdateUser(this, name, userName, password, phoneNumber, address, role).setVisible(true);
        this.setEnabled(false);
    }//GEN-LAST:event_updateUserBtActionPerformed

    private void deleteUserBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteUserBtActionPerformed
        int row = usersTb.getSelectedRow();
        boolean check = false;
        if(row > 0){
            Integer id = UsersListUtils.getIds().get(usersTb.getValueAt(row, 1).toString());
            try {
                check = UserApi.deleteUser(id);
                System.out.println(check);
            } catch (IOException ex) {
                Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        setUserTable("");
    }//GEN-LAST:event_deleteUserBtActionPerformed

    private void logoutMnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutMnActionPerformed
        this.setVisible(false);
        new Login().setVisible(true);
    }//GEN-LAST:event_logoutMnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addUserBt;
    private javax.swing.JTable dateTb;
    private javax.swing.JButton deleteItemBt;
    private javax.swing.JButton deleteUserBt;
    private javax.swing.JTable itemTb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JMenuItem logoutMn;
    private javax.swing.JTable monthTb;
    private javax.swing.JTabbedPane monthp;
    private javax.swing.JButton searchBt;
    private javax.swing.JTextField searchTf;
    private javax.swing.JButton searchUserBt;
    private javax.swing.JTextField searchUserTf;
    private javax.swing.JButton showAddItemBt;
    private javax.swing.JButton showUpdateItemBt;
    private javax.swing.JButton updateUserBt;
    private javax.swing.JTable usersTb;
    private javax.swing.JTable yearTb;
    // End of variables declaration//GEN-END:variables
}
